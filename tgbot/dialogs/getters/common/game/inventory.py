"""–ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è."""

from typing import Any, Dict

from aiogram_dialog import DialogManager
from stp_database import Employee, MainRequestsRepo

from tgbot.misc.helpers import get_status_emoji


async def inventory_getter(
    user: Employee, stp_repo: MainRequestsRepo, **_kwargs
) -> Dict[str, Any]:
    """–ì–µ—Ç—Ç–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–æ–¥–µ–ª—å—é Employee
        stp_repo: –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–∑–æ–π STP

    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user_products = await stp_repo.purchase.get_user_purchases_with_details(
        user_id=user.user_id
    )

    total_bought: int = len(user_products)

    formatted_products = []
    for product in user_products:
        user_product = product.user_purchase
        product_info = product.product_info

        date_str = user_product.bought_at.strftime("%d.%m.%y")
        status_emoji = get_status_emoji(user_product.status)
        usage_info = f"({product.current_usages}/{product.max_usages})"
        button_text = f"{status_emoji} {usage_info} {product_info.name} ({date_str})"

        formatted_products.append((
            user_product.id,  # ID –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞
            button_text,  # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ–¥–∑–∏ –∏ —Å—Ç–∞—Ç—É—Å–æ–º
            product_info.name,
            product_info.description,
            product_info.cost,
            user_product.status,
            product.current_usages,
            product.max_usages,
        ))

    return {
        "total_bought": total_bought,
        "products": formatted_products,
    }


async def inventory_detail_getter(
    dialog_manager: DialogManager, **_kwargs
) -> Dict[str, Any]:
    """–ì–µ—Ç—Ç–µ—Ä –¥–ª—è –æ–∫–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.

    Args:
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞

    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    """
    product_info = dialog_manager.dialog_data.get("selected_inventory_product")

    if not product_info:
        return {}

    status_names = {
        "stored": "–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
        "review": "–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ",
        "used_up": "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω",
        "canceled": "–û—Ç–º–µ–Ω–µ–Ω",
        "rejected": "–û—Ç–∫–ª–æ–Ω–µ–Ω",
    }
    status_name = status_names.get(product_info["status"], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –∫—É–ø–ª–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º
    can_use = (
        product_info["status"] == "stored"
        and product_info["current_usages"] < product_info["max_usages"]
    )

    # –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "stored" –ò usage_count —Ä–∞–≤–µ–Ω 0 (–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è)
    can_sell = product_info["status"] == "stored" and product_info["usage_count"] == 0

    # –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "review" (–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ)
    can_cancel = product_info["status"] == "review"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
    comment_text = ""
    if product_info.get("comment"):
        comment_text = f"\n\n<b>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n‚îî {product_info['comment']}"

    updated_by_text = ""
    if product_info.get("updated_by_user_id") and product_info.get("updated_at"):
        updated_by_text = f"\n\n<blockquote expandable><b>üë§ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞</b>\n<b>üìÖ –î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:</b> {product_info['updated_at']}</blockquote>"

    return {
        "product_name": product_info["product_name"],
        "product_description": product_info["product_description"],
        "product_cost": product_info["product_cost"],
        "product_count": product_info["product_count"],
        "status_name": status_name,
        "usage_count": product_info["usage_count"],
        "bought_at": product_info["bought_at"],
        "comment_text": comment_text,
        "updated_by_text": updated_by_text,
        "can_use": can_use,
        "can_sell": can_sell,
        "can_cancel": can_cancel,
    }
