"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–π."""

from typing import Any

from aiogram import F
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.kbd import (
    Button,
    Checkbox,
    CurrentPage,
    FirstPage,
    Group,
    LastPage,
    ManagedRadio,
    NextPage,
    PrevPage,
    Radio,
    Row,
    ScrollingGroup,
    Select,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format, List

from tgbot.dialogs.events.common.schedules.schedules import (
    do_nothing,
    next_day,
    next_month,
    prev_day,
    prev_month,
    today,
)
from tgbot.dialogs.events.heads.group import (
    on_game_casino_member_click,
    on_game_casino_toggle_all,
    on_member_casino_change,
    on_member_role_change,
    on_member_schedule_mode_select,
    on_member_select,
)
from tgbot.dialogs.getters.common.schedules import group_schedule_getter
from tgbot.dialogs.getters.heads.group.game import (
    game_achievements_getter,
    game_balance_history_getter,
    game_casino_getter,
    game_products_getter,
    game_rating_getter,
    game_statistics_getter,
)
from tgbot.dialogs.getters.heads.group.members import (
    group_members_getter,
    member_access_level_getter,
    member_achievements_getter,
    member_info_getter,
    member_inventory_getter,
    member_kpi_getter,
    member_kpi_requirements_getter,
    member_salary_getter,
    member_schedule_getter,
)
from tgbot.dialogs.getters.heads.group.rating import get_rating_display_data
from tgbot.dialogs.states.head import HeadGroupSG
from tgbot.dialogs.widgets.buttons import HOME_BTN
from tgbot.misc.helpers import get_status_emoji

menu_window = Window(
    Const("""‚ù§Ô∏è <b>–ú–æ—è –≥—Ä—É–ø–ø–∞</b>
    
<i>–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è</i>"""),
    Row(
        SwitchTo(Const("üìÖ –ì—Ä–∞—Ñ–∏–∫"), id="files_processing", state=HeadGroupSG.schedule),
        SwitchTo(Const("üéñÔ∏è –†–µ–π—Ç–∏–Ω–≥"), id="rating", state=HeadGroupSG.rating),
    ),
    Row(
        SwitchTo(Const("üë• –°–æ—Å—Ç–∞–≤"), id="members", state=HeadGroupSG.members),
        SwitchTo(Const("üèÆ –ò–≥—Ä–∞"), id="game", state=HeadGroupSG.game),
    ),
    HOME_BTN,
    state=HeadGroupSG.menu,
)

schedule_window = Window(
    Format("{group_text}"),
    Row(
        Button(
            Const("<"),
            id="prev_day",
            on_click=prev_day,
        ),
        Button(
            Format("üìÖ {date_display}"),
            id="current_date",
            on_click=do_nothing,
        ),
        Button(
            Const(">"),
            id="next_day",
            on_click=next_day,
        ),
    ),
    Button(
        Const("üìç –°–µ–≥–æ–¥–Ω—è"),
        id="today",
        on_click=today,
        when=~F["is_today"],
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.menu),
        HOME_BTN,
    ),
    getter=group_schedule_getter,
    state=HeadGroupSG.schedule,
)

rating_window = Window(
    Format("{rating_text}"),
    Radio(
        Format("‚úì {item[1]}"),
        Format("{item[1]}"),
        id="period_radio",
        item_id_getter=lambda x: x[0],
        items="periods",
    ),
    Radio(
        Format("‚úì {item[1]}"),
        Format("{item[1]}"),
        id="normative_radio",
        item_id_getter=lambda x: x[0],
        items="normatives",
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.menu),
        HOME_BTN,
    ),
    getter=get_rating_display_data,
    state=HeadGroupSG.rating,
)

members_window = Window(
    Format("""üë• <b>–°–æ—Å—Ç–∞–≤</b>

–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: {total_members}"""),
    ScrollingGroup(
        Select(
            Format("{item[1]}"),
            id="group_members",
            items="members_list",
            item_id_getter=lambda item: item[0],
            on_click=on_member_select,
        ),
        width=2,
        height=5,
        hide_on_single_page=True,
        id="members_scroll",
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.menu),
        HOME_BTN,
    ),
    getter=group_members_getter,
    state=HeadGroupSG.members,
)

game_window = Window(
    Format("{statistics_text}"),
    Group(
        Row(
            SwitchTo(
                Const("üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è"),
                id="achievements",
                state=HeadGroupSG.game_achievements,
            ),
            SwitchTo(
                Const("üëè –ü—Ä–µ–¥–º–µ—Ç—ã"),
                id="products",
                state=HeadGroupSG.game_products,
            ),
        ),
        Row(
            SwitchTo(
                Const("üí∞ –ò—Å—Ç–æ—Ä–∏—è –≥—Ä—É–ø–ø—ã"),
                id="balance_history",
                state=HeadGroupSG.game_balance_history,
            ),
            SwitchTo(
                Const("üé∞ –ö–∞–∑–∏–Ω–æ"),
                id="casino",
                state=HeadGroupSG.game_casino,
            ),
        ),
        SwitchTo(
            Const("üéñÔ∏è –†–µ–π—Ç–∏–Ω–≥"),
            id="rating",
            state=HeadGroupSG.game_rating,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.menu),
        HOME_BTN,
    ),
    getter=game_statistics_getter,
    state=HeadGroupSG.game,
)

game_achievements_window = Window(
    Const("""üéØ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã</b>

–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
<i>–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</i>
"""),
    List(
        Format("""{pos}. <b>{item[1]}</b> - {item[7]}
<blockquote>üèÖ –ù–∞–≥—Ä–∞–¥–∞: {item[2]} –±–∞–ª–ª–æ–≤
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item[3]}
üî∞ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {item[4]}
üïí –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ: {item[5]}
üìÖ –ü–æ–ª—É—á–µ–Ω–æ: {item[6]}</blockquote>
"""),
        items="achievements",
        id="game_achievements_list",
        page_size=5,
    ),
    Row(
        FirstPage(
            scroll="game_achievements_list",
            text=Format("1"),
        ),
        PrevPage(
            scroll="game_achievements_list",
            text=Format("<"),
        ),
        CurrentPage(
            scroll="game_achievements_list",
            text=Format("{current_page1}"),
        ),
        NextPage(
            scroll="game_achievements_list",
            text=Format(">"),
        ),
        LastPage(
            scroll="game_achievements_list",
            text=Format("{target_page1}"),
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.game),
        HOME_BTN,
    ),
    getter=game_achievements_getter,
    state=HeadGroupSG.game_achievements,
)

game_products_window = Window(
    Format("""üéí <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –≥—Ä—É–ø–ø—ã</b>

–í—Å–µ –ø–æ–∫—É–ø–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å

–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:
üì¶ - –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
‚è≥ - –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
üîí - –ù–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π

<i>–í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ: {total_bought}</i>
<i>–ü–æ–∫–∞–∑–∞–Ω–æ: {total_shown}</i>"""),
    ScrollingGroup(
        Select(
            Format("{item[1]}"),
            id="game_inventory_product",
            items="products",
            item_id_getter=lambda item: item[0],
        ),
        width=2,
        height=3,
        hide_on_single_page=True,
        id="game_inventory_scroll",
    ),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™Ô∏è {item[1]}"),
        id="game_inventory_filter",
        item_id_getter=lambda item: item[0],
        items=[
            ("all", "üìã –í—Å–µ"),
            ("stored", f"{get_status_emoji('stored')}"),
            ("review", f"{get_status_emoji('review')}"),
            ("used_up", f"{get_status_emoji('used_up')}"),
        ],
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.game),
        HOME_BTN,
    ),
    getter=game_products_getter,
    state=HeadGroupSG.game_products,
)

game_balance_history_window = Window(
    Const("""üí∞ <b>–ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞ –≥—Ä—É–ø–ø—ã</b>

–ü–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≥—Ä—É–ø–ø—ã
<i>–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</i>
"""),
    List(
        Format("""{pos}. {item[1]}
<blockquote>üíµ –°—É–º–º–∞: <b>{item[2]}</b> –±–∞–ª–ª–æ–≤
üìã –¢–∏–ø: {item[3]}
üìÖ –î–∞—Ç–∞: {item[4]}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item[5]}</blockquote>
"""),
        items="history",
        id="game_history_list",
        page_size=5,
    ),
    Row(
        FirstPage(
            scroll="game_history_list",
            text=Format("1"),
        ),
        PrevPage(
            scroll="game_history_list",
            text=Format("<"),
        ),
        CurrentPage(
            scroll="game_history_list",
            text=Format("{current_page1}"),
        ),
        NextPage(
            scroll="game_history_list",
            text=Format(">"),
        ),
        LastPage(
            scroll="game_history_list",
            text=Format("{target_page1}"),
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.game),
        HOME_BTN,
    ),
    getter=game_balance_history_getter,
    state=HeadGroupSG.game_balance_history,
)

game_casino_window = Window(
    Format("""üé∞ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∑–∏–Ω–æ</b>

–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∫–∞–∑–∏–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

üü¢ - –ö–∞–∑–∏–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ
üî¥ - –ö–∞–∑–∏–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ

<i>–í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {total_members}</i>
<i>–ö–∞–∑–∏–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ: {casino_enabled_count}</i>"""),
    Button(
        Const("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –¥–ª—è –≤—Å–µ—Ö"),
        id="toggle_all_casino",
        on_click=on_game_casino_toggle_all,
    ),
    ScrollingGroup(
        Select(
            Format("{item[1]}"),
            id="game_casino_members",
            items="members",
            item_id_getter=lambda item: item[0],
            on_click=on_game_casino_member_click,
        ),
        width=2,
        height=5,
        hide_on_single_page=True,
        id="game_casino_scroll",
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.game),
        HOME_BTN,
    ),
    getter=game_casino_getter,
    state=HeadGroupSG.game_casino,
)

game_rating_window = Window(
    Format("{rating_text}"),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.game),
        HOME_BTN,
    ),
    getter=game_rating_getter,
    state=HeadGroupSG.game_rating,
)

member_details_window = Window(
    Format("{user_info}"),
    Group(
        Row(
            SwitchTo(
                Const("üìÖ –ì—Ä–∞—Ñ–∏–∫"),
                id="files_processing",
                state=HeadGroupSG.member_schedule,
            ),
            SwitchTo(Const("üåü –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏"), id="kpi", state=HeadGroupSG.member_kpi),
        ),
        Row(
            SwitchTo(
                Const("üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è"),
                id="achievements",
                state=HeadGroupSG.member_achievements,
            ),
            SwitchTo(
                Const("üëè –ü—Ä–µ–¥–º–µ—Ç—ã"), id="products", state=HeadGroupSG.member_inventory
            ),
        ),
        Checkbox(
            Const("üü¢ –ö–∞–∑–∏–Ω–æ"),
            Const("üî¥ –ö–∞–∑–∏–Ω–æ"),
            id="member_casino_access",
            on_state_changed=on_member_casino_change,
        ),
        SwitchTo(
            Const("üõ°Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞"),
            id="access_level",
            state=HeadGroupSG.member_access_level,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.members),
        HOME_BTN,
    ),
    getter=member_info_getter,
    state=HeadGroupSG.member_details,
)

member_access_level_window = Window(
    Format("""<b>{selected_user_name}</b>

üõ°Ô∏è <b>–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞</b>
–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {current_role_name}

–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –º–µ–Ω—é –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É"""),
    Group(
        Checkbox(
            Const("‚úÖ –°—Ç–∞–∂–µ—Ä"),
            Const("‚ùå –°—Ç–∞–∂–µ—Ä"),
            id="is_trainee",
        ),
        Select(
            Format("{item[1]}"),
            id="member_access_level_select",
            item_id_getter=lambda item: item[0],
            items="roles",
            on_click=on_member_role_change,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_access_level_getter,
    state=HeadGroupSG.member_access_level,
)

member_schedule_window = Window(
    Format("{schedule_text}"),
    Row(
        Button(
            Const("<"),
            id="prev_month",
            on_click=prev_month,
        ),
        Button(
            Format("{month_display}"),
            id="current_month",
            on_click=do_nothing,
        ),
        Button(
            Const(">"),
            id="next_month",
            on_click=next_month,
        ),
    ),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™Ô∏è {item[1]}"),
        id="schedule_mode",
        item_id_getter=lambda item: item[0],
        items="mode_options",
        on_click=on_member_schedule_mode_select,
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_schedule_getter,
    state=HeadGroupSG.member_schedule,
)

member_kpi_window = Window(
    Format("{kpi_text}"),
    Row(
        SwitchTo(
            Const("üßÆ –ù–æ—Ä–º–∞—Ç–∏–≤—ã"),
            id="calculator",
            state=HeadGroupSG.member_kpi_requirements,
        ),
        SwitchTo(
            Const("üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞"),
            id="salary",
            state=HeadGroupSG.member_kpi_salary,
        ),
    ),
    SwitchTo(Const("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"), id="update", state=HeadGroupSG.member_kpi),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_kpi_getter,
    state=HeadGroupSG.member_kpi,
)

member_kpi_requirements_window = Window(
    Format("{requirements_text}"),
    Row(
        SwitchTo(Const("üåü –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏"), id="kpi", state=HeadGroupSG.member_kpi),
        SwitchTo(
            Const("üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞"),
            id="salary",
            state=HeadGroupSG.member_kpi_salary,
        ),
    ),
    SwitchTo(
        Const("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"), id="update", state=HeadGroupSG.member_kpi_requirements
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_kpi_requirements_getter,
    state=HeadGroupSG.member_kpi_requirements,
)

member_kpi_salary_window = Window(
    Format("{salary_text}"),
    Row(
        SwitchTo(Const("üåü –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏"), id="kpi", state=HeadGroupSG.member_kpi),
        SwitchTo(
            Const("üßÆ –ù–æ—Ä–º–∞—Ç–∏–≤—ã"),
            id="calculator",
            state=HeadGroupSG.member_kpi_requirements,
        ),
    ),
    SwitchTo(Const("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"), id="update", state=HeadGroupSG.member_kpi_salary),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_salary_getter,
    state=HeadGroupSG.member_kpi_salary,
)

member_achievements_window = Window(
    Format("""üéØ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>

<b>{user_name}</b>

–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
<i>–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ: {total_achievements}</i>
"""),
    List(
        Format("""{pos}. <b>{item[1]}</b>
<blockquote>üèÖ –ù–∞–≥—Ä–∞–¥–∞: {item[2]} –±–∞–ª–ª–æ–≤
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item[3]}
üî∞ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {item[4]}
üïí –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ: {item[5]}
üìÖ –ü–æ–ª—É—á–µ–Ω–æ: {item[6]}</blockquote>
"""),
        items="achievements",
        id="member_achievements_list",
        page_size=3,
    ),
    Const("<i>–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤</i>"),
    Row(
        FirstPage(
            scroll="member_achievements_list",
            text=Format("1"),
        ),
        PrevPage(
            scroll="member_achievements_list",
            text=Format("<"),
        ),
        CurrentPage(
            scroll="member_achievements_list",
            text=Format("{current_page1}"),
        ),
        NextPage(
            scroll="member_achievements_list",
            text=Format(">"),
        ),
        LastPage(
            scroll="member_achievements_list",
            text=Format("{target_page1}"),
        ),
    ),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™Ô∏è {item[1]}"),
        id="member_achievement_period_filter",
        item_id_getter=lambda item: item[0],
        items="period_radio_data",
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_achievements_getter,
    state=HeadGroupSG.member_achievements,
)

member_inventory_window = Window(
    Format("""üéí <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</b>

<b>{user_name}</b>

–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –ø–æ–∫—É–ø–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∏—Ö —Å—Ç–∞—Ç—É—Å

–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:
üì¶ - –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
‚è≥ - –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
üîí - –ù–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π

<i>–í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ: {total_bought}</i>
<i>–ü–æ–∫–∞–∑–∞–Ω–æ: {total_shown}</i>"""),
    ScrollingGroup(
        Select(
            Format("{item[1]}"),
            id="member_inventory_product",
            items="products",
            item_id_getter=lambda item: item[0],
        ),
        width=2,
        height=3,
        hide_on_single_page=True,
        id="member_inventory_scroll",
    ),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™Ô∏è {item[1]}"),
        id="member_inventory_filter",
        item_id_getter=lambda item: item[0],
        items=[
            ("all", "üìã –í—Å–µ"),
            ("stored", f"{get_status_emoji('stored')}"),
            ("review", f"{get_status_emoji('review')}"),
            ("used_up", f"{get_status_emoji('used_up')}"),
        ],
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=HeadGroupSG.member_details),
        HOME_BTN,
    ),
    getter=member_inventory_getter,
    state=HeadGroupSG.member_inventory,
)


async def on_start(_on_start: Any, dialog_manager: DialogManager, **_kwargs):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∏–∞–ª–æ–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.

    Args:
        _on_start: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–ª–æ–≥–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    # –§–∏–ª—å—Ç—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ "–î–µ–Ω—å"
    period_radio: ManagedRadio = dialog_manager.find("period_radio")
    await period_radio.set_checked("day")

    # –§–∏–ª—å—Ç—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ "–û—Ü–µ–Ω–∫–∞"
    normative_radio: ManagedRadio = dialog_manager.find("normative_radio")
    await normative_radio.set_checked("csi")

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ "–ö—Ä–∞—Ç–∫–æ"
    member_schedule_mode: ManagedRadio = dialog_manager.find("schedule_mode")
    await member_schedule_mode.set_checked("compact")

    # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–∞ "–í—Å–µ"
    member_achievement_period_filter: ManagedRadio = dialog_manager.find(
        "member_achievement_period_filter"
    )
    await member_achievement_period_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –Ω–∞ "–í—Å–µ"
    member_inventory_filter: ManagedRadio = dialog_manager.find(
        "member_inventory_filter"
    )
    await member_inventory_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –≥—Ä—É–ø–ø—ã –Ω–∞ "–í—Å–µ"
    game_inventory_filter: ManagedRadio = dialog_manager.find("game_inventory_filter")
    await game_inventory_filter.set_checked("all")


head_group_dialog = Dialog(
    menu_window,
    schedule_window,
    rating_window,
    members_window,
    game_window,
    # Game sub-windows
    game_achievements_window,
    game_products_window,
    game_balance_history_window,
    game_casino_window,
    game_rating_window,
    # Member detail windows
    member_details_window,
    member_access_level_window,
    member_schedule_window,
    member_kpi_window,
    member_kpi_requirements_window,
    member_kpi_salary_window,
    member_achievements_window,
    member_inventory_window,
    on_start=on_start,
)
