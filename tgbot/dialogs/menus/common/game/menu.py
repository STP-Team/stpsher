"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π."""

from typing import Any

from aiogram import F
from aiogram_dialog import Dialog, DialogManager
from aiogram_dialog.widgets.kbd import (
    Button,
    ManagedRadio,
    Row,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.window import Window

from tgbot.dialogs.events.common.game.game import close_game_dialog
from tgbot.dialogs.getters.common.game.game import game_getter
from tgbot.dialogs.menus.common.game.achievements import achievements_window
from tgbot.dialogs.menus.common.game.activations import (
    activation_details_window,
    activations_window,
    no_activations_window,
)
from tgbot.dialogs.menus.common.game.casino import (
    casino_bowling_window,
    casino_darts_window,
    casino_dice_window,
    casino_result_window,
    casino_slots_window,
    casino_waiting_window,
    casino_window,
)
from tgbot.dialogs.menus.common.game.history import (
    history_details_window,
    history_window,
)
from tgbot.dialogs.menus.common.game.inventory import (
    inventory_details_window,
    inventory_window,
)
from tgbot.dialogs.menus.common.game.products import (
    products_confirm_window,
    products_success_window,
    products_window,
)
from tgbot.dialogs.states.common.game import Game

game_window = Window(
    Const("üèÆ <b>–ò–≥—Ä–∞</b>"),
    Format(
        """\n{level_info}

<blockquote expandable><b>‚ú® –ë–∞–ª–∞–Ω—Å</b>
–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {achievements_sum} –±–∞–ª–ª–æ–≤
–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {purchases_sum} –±–∞–ª–ª–æ–≤</blockquote>""",
        when="is_user",
    ),
    Const(
        """\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:
- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å/–æ—Ç–∫–ª–æ–Ω—è—Ç—å –ø–æ–∫—É–ø–∫–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
- –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
- –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤""",
        when=~F["is_user"],
    ),
    SwitchTo(Const("üíé –ú–∞–≥–∞–∑–∏–Ω"), id="products", state=Game.products, when="is_user"),
    SwitchTo(
        Const("‚úçÔ∏è –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤"),
        id="products_activation",
        state=Game.activations,
        when="activations_access",
    ),
    Row(
        SwitchTo(
            Const("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"), id="inventory", state=Game.inventory, when="is_user"
        ),
        SwitchTo(Const("üé≤ –ö–∞–∑–∏–Ω–æ"), id="casino", state=Game.casino, when="is_user"),
    ),
    SwitchTo(
        Const("üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è"),
        id="achievements",
        state=Game.achievements,
    ),
    SwitchTo(
        Const("üëè –ü—Ä–µ–¥–º–µ—Ç—ã"), id="products", state=Game.products, when=~F["is_user"]
    ),
    SwitchTo(
        Const("üìú –ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞"), id="history", state=Game.history, when="is_user"
    ),
    Button(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="menu", on_click=close_game_dialog),
    getter=game_getter,
    state=Game.menu,
)


async def on_start(_on_start: Any, dialog_manager: DialogManager, **_kwargs):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∏–∞–ª–æ–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.

    Args:
        _on_start: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–ª–æ–≥–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    # –§–∏–ª—å—Ç—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ "–î–æ—Å—Ç—É–ø–Ω—ã–µ"
    product_filter: ManagedRadio = dialog_manager.find("product_filter")
    await product_filter.set_checked("available")

    # –§–∏–ª—å—Ç—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –Ω–∞ "–í—Å–µ"
    inventory_filter: ManagedRadio = dialog_manager.find("inventory_filter")
    await inventory_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç—è–º –Ω–∞ "–í—Å–µ"
    achievement_position_filter: ManagedRadio = dialog_manager.find(
        "achievement_position_filter"
    )
    await achievement_position_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –ø–µ—Ä–∏–æ–¥—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ "–í—Å–µ"
    achievement_period_filter: ManagedRadio = dialog_manager.find(
        "achievement_period_filter"
    )
    await achievement_period_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –Ω–∞ "–í—Å–µ"
    achievement_division_filter: ManagedRadio = dialog_manager.find(
        "achievement_division_filter"
    )
    await achievement_division_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –Ω–∞ "–í—Å–µ"
    product_division_filter: ManagedRadio = dialog_manager.find(
        "product_division_filter"
    )
    await product_division_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ —Ç–∏–ø—É –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ "–í—Å–µ"
    history_type_filter: ManagedRadio = dialog_manager.find("history_type_filter")
    await history_type_filter.set_checked("all")

    # –§–∏–ª—å—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ "–í—Å–µ"
    history_source_filter: ManagedRadio = dialog_manager.find("history_source_filter")
    await history_source_filter.set_checked("all")


game_dialog = Dialog(
    game_window,
    achievements_window,
    products_window,
    products_confirm_window,
    products_success_window,
    activations_window,
    no_activations_window,
    activation_details_window,
    inventory_window,
    inventory_details_window,
    history_window,
    history_details_window,
    casino_window,
    casino_slots_window,
    casino_dice_window,
    casino_darts_window,
    casino_bowling_window,
    casino_waiting_window,
    casino_result_window,
    on_start=on_start,
)
