"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –±–∏—Ä–∂–µ."""

import operator

from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Row,
    Select,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format

from tgbot.dialogs.events.common.exchanges.create.sell import (
    on_comment_input,
    on_confirm_sell,
    on_date_selected,
    on_hours_selected,
    on_payment_date_selected,
    on_payment_timing_selected,
    on_price_input,
    on_skip_comment,
    on_time_input,
    on_today_selected,
)
from tgbot.dialogs.events.common.exchanges.exchanges import (
    finish_exchanges_dialog,
)
from tgbot.dialogs.getters.common.exchanges.create.sell import (
    sell_comment_getter,
    sell_confirmation_getter,
    sell_date_getter,
    sell_hours_getter,
    sell_payment_date_getter,
    sell_payment_timing_getter,
    sell_price_getter,
    sell_time_input_getter,
)
from tgbot.dialogs.states.common.exchanges import ExchangeCreateSell
from tgbot.dialogs.widgets import RussianCalendar
from tgbot.dialogs.widgets.buttons import HOME_BTN
from tgbot.dialogs.widgets.exchange_calendar import ExchangeCalendar

date_window = Window(
    Const("üìÖ <b>–®–∞–≥ 1: –í—ã–±–æ—Ä –¥–∞—Ç—ã</b>"),
    Format("–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É —Å–º–µ–Ω—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å:"),
    Format("\n<i>–ó–Ω–∞—á–∫–æ–º ¬∑ ¬∑ –ø–æ–º–µ—á–µ–Ω—ã –¥–Ω–∏, –∫–æ–≥–¥–∞ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–º–µ–Ω–∞</i>"),
    ExchangeCalendar(
        id="sell_date_calendar",
        on_click=on_date_selected,
    ),
    Button(Const("üìç –°–µ–≥–æ–¥–Ω—è"), id="exchange_create_today", on_click=on_today_selected),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        Button(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", on_click=finish_exchanges_dialog),
        HOME_BTN,
    ),
    getter=sell_date_getter,
    state=ExchangeCreateSell.date,
)

shift_type_window = Window(
    Const("‚è∞ <b>–¢–∏–ø —Å–¥–µ–ª–∫–∏</b>"),
    Format("""
<blockquote>–î–∞—Ç–∞ —Å–¥–µ–ª–∫–∏: <code>{selected_date}</code>
–¢–≤–æ—è —Å–º–µ–Ω–∞: <code>{user_schedule}</code></blockquote>"""),
    Format("{duty_warning}", when="duty_warning"),
    Format("\n–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å–º–µ–Ω—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏:"),
    Select(
        Format("{item[1]}"),
        id="hours_type",
        items="shift_options",
        item_id_getter=operator.itemgetter(0),
        on_click=on_hours_selected,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.date),
        HOME_BTN,
    ),
    getter=sell_hours_getter,
    state=ExchangeCreateSell.shift_type,
)

hours_window = Window(
    Const("üïê <b>–í—Ä–µ–º—è –ø—Ä–æ–¥–∞–∂–∏</b>"),
    Format("–í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞: <code>{selected_date}</code>"),
    Format("–¢–≤–æ—è —Å–º–µ–Ω–∞ –≤ —ç—Ç—É –¥–∞—Ç—É: <code>{user_schedule}</code>"),
    Format("{duty_warning}", when="duty_warning"),
    Format("\n–í–≤–µ–¥–∏ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å"),
    Format(
        "\n<blockquote>–§–æ—Ä–º–∞—Ç: <code>09:00-13:00</code> –∏–ª–∏ <code>14:00-18:00</code></blockquote>\n–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <code>–ü–µ—Ä–º—å (–ú–°–ö+2)</code>"
    ),
    TextInput(
        id="time_input",
        on_success=on_time_input,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.date),
        HOME_BTN,
    ),
    getter=sell_time_input_getter,
    state=ExchangeCreateSell.hours,
)

price_window = Window(
    Const("üí∞ <b>–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏</b>"),
    Format("–î–∞—Ç–∞ —Å–º–µ–Ω—ã: <code>{selected_date}</code>"),
    Format("–¢–∏–ø —Å–º–µ–Ω—ã: <code>{shift_type}</code>"),
    Format("–ü—Ä–æ–¥–∞–≤–∞–µ–º–æ–µ –≤—Ä–µ–º—è: <code>{shift_time}</code>", when="shift_time"),
    Format("\n–í–≤–µ–¥–∏ –ø–æ–ª–Ω—É—é —Ü–µ–Ω—É –∑–∞ –ø—Ä–æ–¥–∞–≤–∞–µ–º—É—é —Å–º–µ–Ω—É (–≤ —Ä—É–±–ª—è—Ö)"),
    TextInput(
        id="price_input",
        on_success=on_price_input,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(
            Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back_to_previous", state=ExchangeCreateSell.hours
        ),
        HOME_BTN,
    ),
    getter=sell_price_getter,
    state=ExchangeCreateSell.price,
)

payment_timing_window = Window(
    Const("üí≥ <b>–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã</b>"),
    Format("–î–∞—Ç–∞ —Å–º–µ–Ω—ã: <code>{selected_date}</code>"),
    Format("–¢–∏–ø —Å–º–µ–Ω—ã: <code>{shift_type}</code>"),
    Format("–¶–µ–Ω–∞: <code>{price} —Ä.</code>"),
    Format("\n–í—ã–±–µ—Ä–∏ –∫–æ–≥–¥–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –æ–ø–ª–∞—Ç–∞"),
    Select(
        Format("{item[1]}"),
        id="payment_timing",
        items=[
            ("immediate", "üí∏ –°—Ä–∞–∑—É"),
            ("on_date", "üìÖ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É"),
        ],
        item_id_getter=operator.itemgetter(0),
        on_click=on_payment_timing_selected,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.price),
        HOME_BTN,
    ),
    getter=sell_payment_timing_getter,
    state=ExchangeCreateSell.payment_timing,
)

payment_date_window = Window(
    Const("üìÖ <b>–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞</b>"),
    Format("–î–∞—Ç–∞ —Å–º–µ–Ω—ã: <code>{shift_date}</code>"),
    Format("\n–í—ã–±–µ—Ä–∏ –∫—Ä–∞–π–Ω—é—é –¥–∞—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã:"),
    Format("<i>–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –ø–æ–∑–∂–µ –¥–∞—Ç—ã —Å–º–µ–Ω—ã</i>"),
    RussianCalendar(
        id="payment_date_calendar",
        on_click=on_payment_date_selected,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.payment_timing),
        HOME_BTN,
    ),
    getter=sell_payment_date_getter,
    state=ExchangeCreateSell.payment_date,
)

comment_window = Window(
    Const("üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–æ–¥–∞–∂–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</b>"),
    Format("–î–∞—Ç–∞ —Å–º–µ–Ω—ã: <code>{selected_date}</code>"),
    Format("–¢–∏–ø —Å–º–µ–Ω—ã: <code>{shift_type}</code>"),
    Format("–¶–µ–Ω–∞: <code>{price} —Ä.</code>"),
    Format(
        "\n–ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å <b>‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</b>"
    ),
    TextInput(
        id="comment_input",
        on_success=on_comment_input,
    ),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="skip_comment", on_click=on_skip_comment),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.payment_timing),
        HOME_BTN,
    ),
    getter=sell_comment_getter,
    state=ExchangeCreateSell.comment,
)

confirmation_window = Window(
    Const("‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏</b>"),
    Format("""
–ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π:

üìÖ <b>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</b> <code>{shift_time} {shift_date} –ü–†–ú</code>
üí∞ <b>–¶–µ–Ω–∞:</b> <code>{price} —Ä.</code>

‚è∞ <b>–¢–∏–ø —Å–º–µ–Ω—ã:</b> {shift_type}
üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> {payment_info}"""),
    Format("üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}", when="comment"),
    Format("\n–í—Å—ë –≤–µ—Ä–Ω–æ?"),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"), id="confirm", on_click=on_confirm_sell),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateSell.comment),
        HOME_BTN,
    ),
    getter=sell_confirmation_getter,
    state=ExchangeCreateSell.confirmation,
)

exchanges_sell_dialog = Dialog(
    date_window,
    shift_type_window,
    hours_window,
    price_window,
    payment_timing_window,
    payment_date_window,
    comment_window,
    confirmation_window,
)
