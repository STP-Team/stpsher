"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞ –±–∏—Ä–∂–µ."""

from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Row,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format

from tgbot.dialogs.events.common.exchanges.create.buy import (
    on_buy_comment_input,
    on_buy_date_selected,
    on_buy_date_skip,
    on_buy_hours_input,
    on_buy_hours_skip,
    on_buy_price_input,
    on_buy_skip_comment,
    on_confirm_buy,
)
from tgbot.dialogs.events.common.exchanges.exchanges import (
    finish_exchanges_dialog,
)
from tgbot.dialogs.getters.common.exchanges.create.buy import (
    buy_comment_getter,
    buy_confirmation_getter,
    buy_date_getter,
    buy_hours_getter,
    buy_price_getter,
)
from tgbot.dialogs.states.common.exchanges import ExchangeCreateBuy
from tgbot.dialogs.widgets import RussianCalendar
from tgbot.dialogs.widgets.buttons import HOME_BTN

date_window = Window(
    Const("üìÖ <b>–®–∞–≥ 1: –í—ã–±–æ—Ä –¥–∞—Ç—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</b>"),
    Format("–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å —Å–º–µ–Ω—É, –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏ —ç—Ç–æ—Ç —à–∞–≥:"),
    Format("\n<i>–ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å, –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥–ª—è –ª—é–±–æ–π –¥–∞—Ç—ã</i>"),
    RussianCalendar(
        id="buy_date_calendar",
        on_click=on_buy_date_selected,
    ),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="skip_date", on_click=on_buy_date_skip),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateBuy.date),
        HOME_BTN,
    ),
    getter=buy_date_getter,
    state=ExchangeCreateBuy.date,
)

hours_window = Window(
    Const("üïê <b>–®–∞–≥ 2: –í—Ä–µ–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</b>"),
    Format("–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞: <code>{selected_date}</code>", when="selected_date"),
    Format("–õ—é–±–∞—è –¥–∞—Ç–∞", when="any_date"),
    Format("\n–í–≤–µ–¥–∏ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å, –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏:"),
    Format(
        "\n<blockquote>–§–æ—Ä–º–∞—Ç: <code>09:00-13:00</code> –∏–ª–∏ <code>14:00-18:00</code></blockquote>\n–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <code>–ü–µ—Ä–º—å (–ú–°–ö+2)</code>"
    ),
    Format("\n<i>–ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å, –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</i>"),
    TextInput(
        id="buy_hours_input",
        on_success=on_buy_hours_input,
    ),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="skip_hours", on_click=on_buy_hours_skip),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateBuy.date),
        HOME_BTN,
    ),
    getter=buy_hours_getter,
    state=ExchangeCreateBuy.hours,
)

price_window = Window(
    Const("üí∞ <b>–®–∞–≥ 3: –¶–µ–Ω–∞ –∑–∞ —á–∞—Å</b>"),
    Format("–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞: <code>{selected_date}</code>", when="selected_date"),
    Format("–õ—é–±–∞—è –¥–∞—Ç–∞", when="any_date"),
    Format("–í—Ä–µ–º—è: <code>{hours_range}</code>", when="hours_range"),
    Format("–õ—é–±–æ–µ –≤—Ä–µ–º—è", when="any_hours"),
    Format("\n–í–≤–µ–¥–∏ —Ü–µ–Ω—É –∑–∞ —á–∞—Å —Ä–∞–±–æ—Ç—ã(–≤ —Ä—É–±–ª—è—Ö)"),
    Format("\n<blockquote>–ù–∞–ø—Ä–∏–º–µ—Ä: 500</blockquote>"),
    TextInput(
        id="buy_price_input",
        on_success=on_buy_price_input,
    ),
    Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateBuy.hours),
        HOME_BTN,
    ),
    getter=buy_price_getter,
    state=ExchangeCreateBuy.price,
)

comment_window = Window(
    Const("üí¨ <b>–®–∞–≥ 4: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</b>"),
    Format("–î–∞—Ç–∞: <code>{selected_date}</code>", when="selected_date"),
    Format("–î–∞—Ç–∞: –õ—é–±–∞—è", when="any_date"),
    Format("–í—Ä–µ–º—è: <code>{hours_range}</code>", when="hours_range"),
    Format("–í—Ä–µ–º—è: –õ—é–±–æ–µ", when="any_hours"),
    Format("–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: <code>{price_per_hour} —Ä.</code>"),
    Format("\n–ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–ø—Ä–æ—Å—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å <b>‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</b>"),
    TextInput(
        id="buy_comment_input",
        on_success=on_buy_comment_input,
    ),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="skip_comment", on_click=on_buy_skip_comment),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateBuy.price),
        HOME_BTN,
    ),
    getter=buy_comment_getter,
    state=ExchangeCreateBuy.comment,
)

confirmation_window = Window(
    Const("‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏</b>"),
    Format("""
–ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π:

üìÖ <b>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</b> <code>{date_info} {time_info} –ü–†–ú</code>
üí∞ <b>–¶–µ–Ω–∞ –∑–∞ —á–∞—Å:</b> <code>{price_per_hour} —Ä.</code>"""),
    Format(
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n<blockquote expandable>{comment}</blockquote>",
        when="comment",
    ),
    Format("\n–í—Å—ë –≤–µ—Ä–Ω–æ?"),
    Row(
        Button(Const("‚úã –û—Ç–º–µ–Ω–∞"), id="cancel", on_click=finish_exchanges_dialog),
        Button(Const("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"), id="confirm", on_click=on_confirm_buy),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangeCreateBuy.comment),
        HOME_BTN,
    ),
    getter=buy_confirmation_getter,
    state=ExchangeCreateBuy.confirmation,
)

exchanges_buy_dialog = Dialog(
    date_window,
    hours_window,
    price_window,
    comment_window,
    confirmation_window,
)
