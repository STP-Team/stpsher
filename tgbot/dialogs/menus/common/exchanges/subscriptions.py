"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –±–∏—Ä–∂—É."""

from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Checkbox,
    Group,
    Multiselect,
    Radio,
    Row,
    ScrollingGroup,
    Select,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format

from tgbot.dialogs.events.common.exchanges.subscriptions import (
    on_confirm_subscription,
    on_create_subscription,
    on_criteria_next,
    on_delete_subscription,
    on_name_input,
    on_price_input,
    on_subscription_selected,
    on_toggle_subscription,
)
from tgbot.dialogs.getters.common.exchanges.subscriptions import (
    subscription_create_confirmation_getter,
    subscription_create_criteria_getter,
    subscription_create_date_getter,
    subscription_create_name_getter,
    subscription_create_price_getter,
    subscription_create_time_getter,
    subscription_create_type_getter,
    subscription_detail_getter,
    subscriptions_getter,
)
from tgbot.dialogs.states.common.exchanges import ExchangesSub
from tgbot.dialogs.widgets.buttons import HOME_BTN

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–æ–∫
menu_window = Window(
    Const("üîî <b>–ü–æ–¥–ø–∏—Å–∫–∏</b>"),
    Format("""
–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –Ω–∞ –Ω–æ–≤—ã–µ –æ–±–º–µ–Ω—ã. –ö–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –æ–±–º–µ–Ω, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–≤–æ–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º, —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.

üìä <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫:</b> {active_subscriptions_count}
üìä <b>–í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫:</b> {total_subscriptions_count}"""),
    Format(
        "\nüîç <i>–ù–∞–∂–º–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π</i>",
        when="has_subscriptions",
    ),
    Format(
        "\nüì≠ <i>–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫</i>",
        when=~F["has_subscriptions"],
    ),
    ScrollingGroup(
        Select(
            Format("{item[name]} | {item[status]}"),
            id="subscription_select",
            items="subscriptions_list",
            item_id_getter=lambda item: item["id"],
            on_click=on_subscription_selected,
        ),
        width=1,
        height=8,
        hide_on_single_page=True,
        id="subscription_scrolling",
        when="has_subscriptions",
    ),
    Row(
        Button(
            Const("‚ûï –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"),
            id="add_subscription",
            on_click=on_create_subscription,
        ),
        Button(Const("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"), id="refresh_subscriptions"),
    ),
    Row(SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.menu), HOME_BTN),
    getter=subscriptions_getter,
    state=ExchangesSub.menu,
)

# –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏
sub_detail_window = Window(
    Const("üîç <b>–î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>"),
    Format("""
üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {subscription_name}
üìà <b>–¢–∏–ø –æ–±–º–µ–Ω–æ–≤:</b> {exchange_type}
üìã <b>–ö—Ä–∏—Ç–µ—Ä–∏–∏:</b>
{criteria_text}"""),
    Checkbox(
        Const("üü¢ –ê–∫—Ç–∏–≤–Ω–∞—è"),
        Const("üü° –í—ã–∫–ª—é—á–µ–Ω–∞"),
        id="sub_status",
    ),
    Row(
        Button(
            Format("{toggle_text}"),
            id="toggle_subscription",
            on_click=on_toggle_subscription,
        ),
        Button(
            Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"),
            id="delete_subscription",
            on_click=on_delete_subscription,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.menu),
        HOME_BTN,
    ),
    getter=subscription_detail_getter,
    state=ExchangesSub.sub_detail,
)

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏
create_type_window = Window(
    Const("‚ûï <b>–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>"),
    Const("""
–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±–º–µ–Ω–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è:"""),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™ {item[1]}"),
        id="exchange_type",
        item_id_getter=lambda item: item[0],
        items="exchange_types",
    ),
    Button(
        Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
        id="next_criteria",
        on_click=on_criteria_next,
        when="exchange_type_selected",
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.menu),
        HOME_BTN,
    ),
    getter=subscription_create_type_getter,
    state=ExchangesSub.create_type,
)

# –í—ã–±–æ—Ä –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ–¥–ø–∏—Å–∫–∏
subscription_create_criteria_window = Window(
    Const("üéØ <b>–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>"),
    Format("""
–í—ã–±–µ—Ä–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ–±–º–µ–Ω–æ–≤:

<b>–¢–∏–ø –æ–±–º–µ–Ω–æ–≤:</b> {selected_exchange_type}"""),
    Group(
        Multiselect(
            Format("‚úÖ {item[1]}"),
            Format("‚òëÔ∏è {item[1]}"),
            id="criteria_toggles",
            item_id_getter=lambda item: item[0],
            items="criteria_options",
        ),
        width=2,
    ),
    Row(
        SwitchTo(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.create_type),
        Button(
            Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
            id="next_price",
            on_click=on_criteria_next,
            when="criteria_selected",
        ),
    ),
    getter=subscription_create_criteria_getter,
    state=ExchangesSub.create_criteria,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω—ã (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞)
create_price_window = Window(
    Const("üí∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω—ã</b>"),
    Format("""
–£–∫–∞–∂–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:

<b>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:</b>
{selected_criteria}"""),
    Format(
        "\nüí∞ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:</b> {min_price} —Ä.",
        when="min_price",
    ),
    Format(
        "\nüí∞ <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:</b> {max_price} —Ä.",
        when="max_price",
    ),
    Format(
        "\nüí° <i>–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É (–∏–ª–∏ 0 –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞):</i>",
        when="input_step_min",
    ),
    Format(
        "\nüí° <i>–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É (–∏–ª–∏ 0 –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞):</i>",
        when="input_step_max",
    ),
    TextInput(
        id="price_input",
        type_factory=int,
        on_success=on_price_input,
    ),
    Row(
        SwitchTo(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.create_criteria),
        Button(
            Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
            id="next_time",
            on_click=on_criteria_next,
            when="price_completed",
        ),
    ),
    getter=subscription_create_price_getter,
    state=ExchangesSub.create_price,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞)
create_time_window = Window(
    Const("‚è∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏</b>"),
    Format("""
–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:

<b>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:</b>
{selected_criteria}"""),
    Radio(
        Format("üîò {item[1]}"),
        Format("‚ö™ {item[1]}"),
        id="time_range",
        item_id_getter=lambda item: item[0],
        items="time_ranges",
    ),
    Row(
        SwitchTo(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.create_price),
        Button(
            Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
            id="next_date",
            on_click=on_criteria_next,
            when="time_selected",
        ),
    ),
    getter=subscription_create_time_getter,
    state=ExchangesSub.create_time,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞)
create_date_window = Window(
    Const("üìÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç</b>"),
    Format("""
–í—ã–±–µ—Ä–∏—Ç–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:

<b>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:</b>
{selected_criteria}"""),
    Multiselect(
        Format("‚úÖ {item[1]}"),
        Format("‚òëÔ∏è {item[1]}"),
        id="days_of_week",
        item_id_getter=lambda item: item[0],
        items="weekdays",
    ),
    Row(
        SwitchTo(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), id="back", state=ExchangesSub.create_time),
        Button(
            Const("‚û°Ô∏è –î–∞–ª–µ–µ"),
            id="next_notifications",
            on_click=on_criteria_next,
            when="days_selected",
        ),
    ),
    getter=subscription_create_date_getter,
    state=ExchangesSub.create_date,
)


# –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
create_name_window = Window(
    Const("üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏</b>"),
    Format("""
–î–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞:

<b>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>
{subscription_summary}"""),
    Format(
        "\nüìù <b>–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b> {current_name}",
        when="current_name",
    ),
    Format("\nüí° <i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:</i>"),
    TextInput(
        id="name_input",
        on_success=on_name_input,
    ),
    Button(
        Const("‚ú® –ê–≤—Ç–æ–Ω–∞–∑–≤–∞–Ω–∏–µ"),
        id="auto_name",
        on_click=on_name_input,
    ),
    Row(
        SwitchTo(
            Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
            id="back",
            state=ExchangesSub.create_date,
        ),
        Button(
            Const("‚û°Ô∏è –ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é"),
            id="next_confirmation",
            on_click=on_criteria_next,
            when="name_entered",
        ),
    ),
    getter=subscription_create_name_getter,
    state=ExchangesSub.create_name,
)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è
create_confirmation_window = Window(
    Const("‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è</b>"),
    Format("""
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:

üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {subscription_name}
üìà <b>–¢–∏–ø –æ–±–º–µ–Ω–æ–≤:</b> {exchange_type}
üéØ <b>–ö—Ä–∏—Ç–µ—Ä–∏–∏:</b>
{criteria_summary}

üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
{notification_summary}"""),
    Row(
        Button(
            Const("‚úÖ –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"), id="confirm", on_click=on_confirm_subscription
        ),
        SwitchTo(
            Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
            id="edit",
            state=ExchangesSub.create_name,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ö –ø–æ–¥–ø–∏—Å–∫–∞–º"), id="cancel", state=ExchangesSub.menu),
        HOME_BTN,
    ),
    getter=subscription_create_confirmation_getter,
    state=ExchangesSub.create_confirmation,
)


exchanges_subscriptions_dialog = Dialog(
    menu_window,
    sub_detail_window,
    create_type_window,
    subscription_create_criteria_window,
    create_price_window,
    create_time_window,
    create_date_window,
    create_name_window,
    create_confirmation_window,
)
