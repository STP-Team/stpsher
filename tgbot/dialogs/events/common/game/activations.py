"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤."""

import logging

from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager
from aiogram_dialog.api.internal import Widget
from aiogram_dialog.widgets.input import ManagedTextInput
from stp_database import Employee, MainRequestsRepo

from tgbot.dialogs.states.common.game import Game
from tgbot.misc.helpers import format_fullname, strftime_date

logger = logging.getLogger(__name__)


async def on_activation_click(
    callback: CallbackQuery, _widget: Widget, dialog_manager: DialogManager, item_id
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –≤ –º–µ–Ω—é –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.

    Args:
        callback: Callback query –æ—Ç Telegram
        _widget: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
        item_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        purchase_details = await stp_repo.purchase.get_purchase_details(item_id)

        if not purchase_details:
            await callback.answer("‚ùå –ü–æ–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return

        purchase = purchase_details.user_purchase
        product = purchase_details.product_info

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        purchase_user: Employee = await stp_repo.employee.get_users(
            user_id=purchase.user_id
        )
        purchase_user_head: Employee = (
            await stp_repo.employee.get_users(fullname=purchase_user.head)
            if purchase_user and purchase_user.head
            else None
        )

        user_info = format_fullname(
            purchase_user.fullname,
            True,
            True,
            purchase_user.username,
            purchase_user.user_id,
        )

        head_info = format_fullname(
            purchase_user_head.fullname,
            True,
            True,
            purchase_user_head.username,
            purchase_user_head.user_id,
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ dialog_data
        dialog_manager.dialog_data["selected_activation"] = {
            "purchase_id": purchase.id,
            "product_name": product.name,
            "product_description": product.description,
            "product_cost": product.cost,
            "product_count": product.count,
            "product_division": product.division,
            "bought_at": purchase.bought_at.strftime(strftime_date),
            "usage_count": purchase.usage_count,
            "user_name": user_info,
            "fullname": purchase_user.fullname,
            "user_division": purchase_user.division if purchase_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            "user_position": purchase_user.position if purchase_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            "user_head": head_info,
            "user_username": purchase_user.username if purchase_user else None,
            "user_id": purchase_user.user_id if purchase_user else purchase.user_id,
            "user_comment": purchase.user_comment,
        }

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É
        await dialog_manager.switch_to(Game.activation_details)

    except Exception as e:
        logger.error(
            f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}"
        )
        await callback.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True
        )


async def on_activation_approve_comment_input(
    message: Message,
    _widget: ManagedTextInput,
    dialog_manager: DialogManager,
    comment: str,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    Args:
        message: Message –æ—Ç Telegram
        _widget: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
        comment: –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
        await stp_repo.purchase.approve_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=user.user_id,
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        await stp_repo.purchase.update_purchase(
            purchase_id=activation_info["purchase_id"],
            manager_comment=comment,
        )

        await message.answer(
            f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{activation_info['product_name']}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º!\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω"
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if activation_info["usage_count"] + 1 >= activation_info["product_count"]:
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>
<blockquote expandable>{comment}</blockquote>

–£ <b>{activation_info["product_name"]}</b> –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π

<i>–ö—É–ø–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –º–æ–∂–Ω–æ –≤ <b>üíé –ú–∞–≥–∞–∑–∏–Ω–µ</b></i>"""
        else:
            remaining_uses = activation_info["product_count"] - (
                activation_info["usage_count"] + 1
            )
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>
<blockquote expandable>{comment}</blockquote>

üìç –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: {remaining_uses} –∏–∑ {activation_info["product_count"]}"""

        await message.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        await dialog_manager.switch_to(Game.activations)

    except Exception as e:
        logger.error(
            f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}"
        )
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")


async def on_skip_approve_comment(
    callback: CallbackQuery, _widget: Widget, dialog_manager: DialogManager, **_kwargs
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    Args:
        callback: Callback query –æ—Ç Telegram
        _widget: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        await stp_repo.purchase.approve_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=user.user_id,
        )

        await callback.answer(
            f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{activation_info['product_name']}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω",
            show_alert=True,
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if activation_info["usage_count"] + 1 >= activation_info["product_count"]:
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

–£ <b>{activation_info["product_name"]}</b> –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π

<i>–ö—É–ø–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –º–æ–∂–Ω–æ –≤ <b>üíé –ú–∞–≥–∞–∑–∏–Ω–µ</b></i>"""
        else:
            remaining_uses = activation_info["product_count"] - (
                activation_info["usage_count"] + 1
            )
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

üìç –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: {remaining_uses} –∏–∑ {activation_info["product_count"]}"""

        await callback.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        await dialog_manager.switch_to(Game.activations)

    except Exception as e:
        logger.error(
            f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}"
        )
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True)


async def on_activation_reject_comment_input(
    message: Message,
    _widget: ManagedTextInput,
    dialog_manager: DialogManager,
    comment: str,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    Args:
        message: Message –æ—Ç Telegram
        _widget: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
        comment: –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –û—Ç–∫–ª–æ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
        await stp_repo.purchase.reject_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=user.user_id,
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        await stp_repo.purchase.update_purchase(
            purchase_id=activation_info["purchase_id"],
            manager_comment=comment,
        )

        await message.answer(
            f"‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{activation_info['product_name']}' –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω"
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        employee_notify_message = f"""<b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –æ—Ç–º–µ–Ω–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é <b>{activation_info["product_name"]}</b>

üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>
<blockquote expandable>{comment}</blockquote>

<i>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–æ</i>"""

        await message.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        await dialog_manager.switch_to(Game.activations)

    except Exception as e:
        logger.error(f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")


async def on_skip_reject_comment(
    callback: CallbackQuery, _widget: Widget, dialog_manager: DialogManager, **_kwargs
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    Args:
        callback: Callback query –æ—Ç Telegram
        _widget: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –û—Ç–∫–ª–æ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        await stp_repo.purchase.reject_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=user.user_id,
        )

        await callback.answer(
            f"‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{activation_info['product_name']}' –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω",
            show_alert=True,
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        employee_notify_message = f"""<b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä {format_fullname(user.fullname, True, True, user.username, user.user_id)} –æ—Ç–º–µ–Ω–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é <b>{activation_info["product_name"]}</b>

<i>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–æ</i>"""

        await callback.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        await dialog_manager.switch_to(Game.activations)

    except Exception as e:
        logger.error(f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True)
