"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–∞–∑–∏–Ω–æ."""

import asyncio
from typing import Dict

from aiogram.enums import DiceEmoji
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button
from stp_database import Employee, MainRequestsRepo

from tgbot.dialogs.states.common.game import Game


async def change_rate(
    _callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏.

    Args:
        _callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ button.widget_id
    # –§–æ—Ä–º–∞—Ç: rate_minus_50 –∏–ª–∏ rate_plus_50
    widget_id = button.widget_id
    if "minus" in widget_id:
        delta = -int(widget_id.split("_")[-1])
    else:  # "plus" in widget_id
        delta = int(widget_id.split("_")[-1])

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞–≤–∫—É
    current_rate = dialog_manager.dialog_data.get("casino_rate", 10)

    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç–∞–≤–∫—É
    new_rate = max(10, current_rate + delta)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç–∞–≤–∫—É
    dialog_manager.dialog_data["casino_rate"] = new_rate


def calculate_slots_multiplier(value: int) -> float:
    """–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è —Å–ª–æ—Ç–æ–≤.

    Args:
        value: –ó–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ—Ç–∞ (1-64)

    Returns:
        –ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤—ã–∏–≥—Ä—ã—à–∞
    """
    # –õ–æ–≥–∏–∫–∞ —Å–ª–æ—Ç–æ–≤ –∏–∑ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏:
    # –î–∂–µ–∫–ø–æ—Ç (777) - value 64: x5.0
    # –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö - values 1,22,43: x3.5
    # –î–≤–µ —Å–µ–º–µ—Ä–∫–∏ - values 16,32,48: x2.5
    if value == 64:  # –î–∂–µ–∫–ø–æ—Ç 777
        return 5.0
    elif value in [1, 22, 43]:  # –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
        return 3.5
    elif value in [16, 32, 48]:  # –î–≤–µ —Å–µ–º–µ—Ä–∫–∏
        return 2.5
    return 0.0


def calculate_simple_multiplier(value: int) -> float:
    """–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∏–≥—Ä (dice, darts, bowling).

    Args:
        value: –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ (1-6)

    Returns:
        –ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤—ã–∏–≥—Ä—ã—à–∞
    """
    if value == 6:
        return 2.0
    elif value == 5:
        return 1.5
    elif value == 4:
        return 0.75
    return 0.0


async def play_casino_game(
    callback: CallbackQuery,
    dialog_manager: DialogManager,
    stp_repo: MainRequestsRepo,
    user: Employee,
    game_type: str,
    dice_emoji: DiceEmoji,
) -> None:
    """–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–∞–∑–∏–Ω–æ-–∏–≥—Ä—ã.

    Args:
        user: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–æ–¥–µ–ª—å—é Employee.
        stp_repo: –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–∑–æ–π STP
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
        game_type: –¢–∏–ø –∏–≥—Ä—ã (slots, dice, darts, bowling)
        dice_emoji: Emoji –¥–ª—è dice API
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞–≤–∫—É –∏ –±–∞–ª–∞–Ω—Å
    current_rate = dialog_manager.dialog_data.get("casino_rate", 10)
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
    if user_balance < current_rate:
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã!", show_alert=True)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –∏–≥—Ä—ã –∏ —Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å
    dialog_manager.dialog_data["casino_game_type"] = game_type
    dialog_manager.dialog_data["old_balance"] = user_balance

    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π dice
    await callback.message.edit_reply_markup(reply_markup=None)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º dice –∏ –∂–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    dice_message = await callback.message.answer_dice(emoji=dice_emoji)
    dice_value = dice_message.dice.value

    # –ñ–¥–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (3 —Å–µ–∫—É–Ω–¥—ã)
    await asyncio.sleep(3)

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã–∏–≥—Ä—ã—à
    if game_type == "slots":
        multiplier = calculate_slots_multiplier(dice_value)
    else:
        multiplier = calculate_simple_multiplier(dice_value)

    # –í—ã—á–∏—Å–ª—è–µ–º —á–∏—Å—Ç—ã–π –≤—ã–∏–≥—Ä—ã—à/–ø—Ä–æ–∏–≥—Ä—ã—à
    if multiplier > 0:
        gross_win = int(current_rate * multiplier)
        net_win = gross_win - current_rate
    else:
        net_win = -current_rate

    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    if net_win > 0:
        await stp_repo.transaction.add_transaction(
            user_id=user.user_id,
            transaction_type="earn",
            source_type="casino",
            amount=net_win,
            comment=f"–í—ã–∏–≥—Ä—ã—à –≤ {game_type}: {dice_value} (—Å—Ç–∞–≤–∫–∞ {current_rate})",
        )
    elif net_win < 0:
        await stp_repo.transaction.add_transaction(
            user_id=user.user_id,
            transaction_type="spend",
            source_type="casino",
            amount=abs(net_win),
            comment=f"–ü—Ä–æ–∏–≥—Ä—ã—à –≤ {game_type}: {dice_value} (—Å—Ç–∞–≤–∫–∞ {current_rate})",
        )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result_data = format_result(game_type, dice_value, multiplier, net_win)
    dialog_manager.dialog_data.update(result_data)
    dialog_manager.dialog_data["win_amount"] = net_win

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∫–Ω—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    dialog_manager.show_mode = ShowMode.SEND
    await dialog_manager.switch_to(Game.casino_result)


def format_result(game_type: str, value: int, multiplier: float, net_win: int) -> Dict:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã.

    Args:
        game_type: –¢–∏–ø –∏–≥—Ä—ã
        value: –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        multiplier: –ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤—ã–∏–≥—Ä—ã—à–∞
        net_win: –ß–∏—Å—Ç—ã–π –≤—ã–∏–≥—Ä—ã—à

    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    """
    if net_win > 0:
        result_icon = "üéâ"
        result_title = "–ü–æ–±–µ–¥–∞!"
    elif net_win == 0:
        result_icon = "üòê"
        result_title = "–ù–∏—á—å—è"
    else:
        result_icon = "üòî"
        result_title = "–ü—Ä–æ–∏–≥—Ä—ã—à"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏–≥—Ä—ã
    if game_type == "slots":
        if value == 64:
            result_message = "üé∞ <b>–î–ñ–ï–ö–ü–û–¢!</b> –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏!"
        elif value in [1, 22, 43]:
            result_message = "üî• <b>–¢—Ä–∏ –≤ —Ä—è–¥!</b> –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
        elif value in [16, 32, 48]:
            result_message = "‚ú® <b>–î–≤–µ —Å–µ–º–µ—Ä–∫–∏!</b> –ù–µ–ø–ª–æ—Ö–æ!"
        else:
            result_message = "–ù–µ –ø–æ–≤–µ–∑–ª–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑..."
    elif game_type == "dice":
        if value == 6:
            result_message = f"üéØ –í—ã–ø–∞–ª–æ <b>{value}</b>! –û—Ç–ª–∏—á–Ω–æ!"
        elif value == 5:
            result_message = f"‚ú® –í—ã–ø–∞–ª–æ <b>{value}</b>! –•–æ—Ä–æ—à–æ!"
        elif value == 4:
            result_message = f"üí´ –í—ã–ø–∞–ª–æ <b>{value}</b>! –ù–µ–ø–ª–æ—Ö–æ!"
        else:
            result_message = f"–í—ã–ø–∞–ª–æ <b>{value}</b>. –ù–µ –ø–æ–≤–µ–∑–ª–æ..."
    elif game_type == "darts":
        if value == 6:
            result_message = "üéØ <b>–Ø–±–ª–æ—á–∫–æ!</b> –ò–¥–µ–∞–ª—å–Ω—ã–π –±—Ä–æ—Å–æ–∫!"
        elif value == 5:
            result_message = "‚ú® <b>–ë–ª–∏–∑–∫–æ –∫ —Ü–µ–Ω—Ç—Ä—É!</b> –•–æ—Ä–æ—à–∏–π –±—Ä–æ—Å–æ–∫!"
        elif value == 4:
            result_message = "üí´ <b>–í –º–∏—à–µ–Ω—å!</b> –ù–µ–ø–ª–æ—Ö–æ!"
        else:
            result_message = f"–ü–æ–ø–∞–¥–∞–Ω–∏–µ –Ω–∞ <b>{value}</b>. –ü—Ä–æ–º–∞—Ö..."
    else:  # bowling
        if value == 6:
            result_message = "üé≥ <b>–°–¢–†–ê–ô–ö!</b> –í—Å–µ –∫–µ–≥–ª–∏ —Å–±–∏—Ç—ã!"
        elif value == 5:
            result_message = "‚ú® <b>–ü–æ—á—Ç–∏ —Å—Ç—Ä–∞–π–∫!</b> 5 –∫–µ–≥–ª–µ–π!"
        elif value == 4:
            result_message = "üí´ <b>–•–æ—Ä–æ—à–∏–π –±—Ä–æ—Å–æ–∫!</b> 4 –∫–µ–≥–ª–∏!"
        else:
            result_message = f"–°–±–∏—Ç–æ <b>{value}</b> –∫–µ–≥–ª–µ–π. –°–ª–∞–±–æ–≤–∞—Ç–æ..."

    if multiplier > 0:
        result_message += f"\nüéÅ <b>–ú–Ω–æ–∂–∏—Ç–µ–ª—å:</b> x{multiplier}"

    return {
        "result_icon": result_icon,
        "result_title": result_title,
        "result_message": result_message,
    }


async def start_slots(
    callback: CallbackQuery,
    button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã.

    Args:
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]

    await play_casino_game(
        callback, dialog_manager, stp_repo, user, "slots", DiceEmoji.SLOT_MACHINE
    )


async def start_dice(
    callback: CallbackQuery,
    _button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏.

    Args:
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]

    await play_casino_game(
        callback, dialog_manager, stp_repo, user, "dice", DiceEmoji.DICE
    )


async def start_darts(
    callback: CallbackQuery,
    _button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤ –¥–∞—Ä—Ç—Å.

    Args:
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]

    await play_casino_game(
        callback, dialog_manager, stp_repo, user, "darts", DiceEmoji.DART
    )


async def start_bowling(
    callback: CallbackQuery,
    _button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –≤ –±–æ—É–ª–∏–Ω–≥.

    Args:
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]

    await play_casino_game(
        callback, dialog_manager, stp_repo, user, "bowling", DiceEmoji.BOWLING
    )


async def play_again(
    callback: CallbackQuery,
    _button: Button,
    dialog_manager: DialogManager,
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–≥—Ä—ã - —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç—É –∂–µ –∏–≥—Ä—É.

    Args:
        callback: Callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _button: Button –≤–∏–¥–∂–µ—Ç
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]

    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –∏–≥—Ä—ã –∏–∑ dialog_data
    game_type = dialog_manager.dialog_data.get("casino_game_type", "slots")

    # –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ –∏–≥—Ä –Ω–∞ emoji
    game_emojis = {
        "slots": DiceEmoji.SLOT_MACHINE,
        "dice": DiceEmoji.DICE,
        "darts": DiceEmoji.DART,
        "bowling": DiceEmoji.BOWLING,
    }

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É —Å–Ω–æ–≤–∞ —Å —Ç–µ–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    await play_casino_game(
        callback,
        dialog_manager,
        stp_repo,
        user,
        game_type,
        game_emojis.get(game_type, DiceEmoji.SLOT_MACHINE),
    )
